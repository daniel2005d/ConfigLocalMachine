---
- name: "Checking if sudo was setting"
  lineinfile: 
    path: /etc/sudoers
    line: "{{ ansible_env.USER }} ALL=(ALL) NOPASSWD:ALL"
    state: present
  become: true
  become_method: sudo

- name: "Copying Settings Files"
  copy:
    src: "{{item.src}}" 
    dest: "{{item.dest}}"
    mode: "preserve"
  loop:
    - {"src":"{{ playbook_dir }}/files/", "dest":"{{ ansible_env.HOME }}/"}
    - {"src":"{{ playbook_dir }}/scripts/", "dest":"{{ ansible_env.HOME }}/bin"}
    - {"src":"{{ playbook_dir }}/files/utilities-terminal.svg", "dest":"{{ ansible_env.HOME }}/Pictures/"}
   
# root Section
- name: "Copying root Settings Files"
  copy:
    src: "{{item.src}}" 
    dest: "{{item.dest}}"
    mode: "preserve"
  loop:
    - {"src":"{{ playbook_dir }}/files/", "dest":"/root/"}
    - {"src":"{{ playbook_dir }}/scripts/", "dest":"/root/bin/"}
  become: true
   
- name: "Creating root vimrc"
  copy:
    dest: "/root/.vimrc"
    content: |
      set number
      syntax on
  become: true


# end root section

- name: "Copy mate settings template"
  template: 
    src: "templates/mate.settings.j2"
    dest: "/tmp/mate.settings"
  when: '"BSPWN" != ansible_env.DESKTOP|default("")'

- name: "Checking if dconf exists"
  stat:
    path: "/usr/bin/dconf"
  register: dconf_command
  become: true
  become_method: sudo
  when: '"BSPWN" != ansible_env.DESKTOP|default("")'

- name: "Setting Mate Desktop"
  shell:
    cmd: "dconf load / < /tmp/mate.settings"
  when: dconf_command.stat.exists == true and '"BSPWN" != ansible_env.DESKTOP|default("")'
  
- name: "Checking hackthebox Folder"
  stat:
    path: "/usr/share/icons/hackthebox"
  register: htbicons_folder
  when: '"BSPWN" != ansible_env.DESKTOP|default("")'

- name: "Copying Terminal icons"
  copy:
    src: "{{ playbook_dir }}/files/utilities-terminal.svg"
    dest: "{{item.dest}}"
    mode: "preserve"
  become: true
  become_method: sudo
  loop:
    - {"dest":"/usr/share/icons/hackthebox/22/apps/"}
    - {"dest":"/usr/share/icons/hackthebox/32/apps/"}
    - {"dest":"/usr/share/icons/hackthebox/64/apps/"}
    - {"dest":"/usr/share/icons/hackthebox/24x24/apps/"}
  when: htbicons_folder.stat.exists

- name: "Copying Mate Settings Desktop"
  copy:
    dest: "/usr/share/applications/mate-terminal.desktop"
    content: |
      #!/usr/bin/env xdg-open
      [Desktop Entry]
      Version=1.0
      Type=Application
      Terminal=false
      Icon={{ ansible_env.HOME}}/Pictures/utilities-terminal.svg
      Icon[en_US]={{ ansible_env.HOME }}/Pictures/utilities-terminal.svg
      Name[en_US]=mate-terminal
      Exec=/usr/bin/mate-terminal
      Name=mate-terminal
  become: true
  become_method: sudo
  when: '"BSPWN" != ansible_env.DESKTOP|default("")'

- name: "Checking folder fonts"
  stat:
    path: "{{ansible_env.HOME}}/.local/share/fonts"
  register: fonts_folder
 

- name: "Creating fonts folder"
  file:
    path: "{{ansible_env.HOME}}/.local/share/fonts"
    state: "directory"
    mode: 0777
  when: not fonts_folder.stat.exists

- name: "Checking HackFonts Exists"
  stat:
    path: "{{ansible_env.HOME}}/.local/share/fonts/HackNerdFont-Bold.ttf"
  register: hacknerd_fonts

- name: "Downloading Fonts"
  get_url: 
    url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip
    dest: "/tmp/Hack.zip"
  when: not hacknerd_fonts.stat.exists

- name: "Uncompress Fonts Zip File"
  shell: |
    cd {{ansible_env.HOME}}/.local/share/fonts/ && unzip -o /tmp/Hack.zip
  when: not hacknerd_fonts.stat.exists

- name: "Change Grub delay "
  replace:
    path: '/etc/default/grub'
    regexp: 'TIMEOUT=.*'
    replace: 'TIMEOUT=1'
  become: true
  become_method: sudo

- name: "Updating GRUB"
  shell:
    cmd: update-grub
  become: true
  become_method: sudo